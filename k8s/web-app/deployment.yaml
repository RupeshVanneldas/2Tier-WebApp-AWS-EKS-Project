apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
  namespace: final
  labels:
    app.kubernetes.io/app: employees
spec:
  selector:
    matchLabels:
      app.kubernetes.io/app: employees
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/app: employees
    spec:
      serviceAccountName: clo835
      containers:
      - name: application
        image: <AWS_ACCOUNT_ID>.dkr.ecr.<AWS_ACCOUNT_REGION>.amazonaws.com/<REPO_NAME>:my_app_v1
        env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_SESSION_TOKEN
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: AWS_SESSION_TOKEN
        - name: DBUSER
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DBUSER
        - name: DBPWD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: DBPWD
        - name: DBHOST
          value: mysql-0.mysql-headless.final.svc.cluster.local
        - name: BG_IMAGE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: BG_IMAGE_URL
        - name: GROUP_SLOGAN
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: GROUP_SLOGAN
        - name: GROUP_NAME
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: GROUP_NAME
        ports:
        - containerPort: 81
      imagePullSecrets:
      - name: app-secrets